// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'app/data/user_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 3791483343505301613),
      name: 'User',
      lastPropertyId: const obx_int.IdUid(33, 8647748871829559781),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3741132946661619086),
            name: 'id',
            type: 6,
            flags: 129),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1140111131935929494),
            name: 'gender',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5325911952253807954),
            name: 'fullName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 1190343256376169852),
            name: 'age',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(33, 8647748871829559781),
            name: 'isSelected',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 3791483343505301613),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        853002018259844914,
        2298726755826413115,
        6560635566130258256,
        6094602284412574361,
        8269099522646222772,
        5105337566453832555,
        7139246063418371091,
        5052556055767052938,
        2854138522935071426,
        7635656749551839684,
        4778000552674988088,
        9176466695699533481,
        3006848620460349435,
        3675375975729919819,
        7562558973030945614,
        8425064704056020015,
        211165303009281071,
        7894926086337389783,
        1023129390311031784,
        1651160083899859026,
        381925477523018930,
        4120227888722650716,
        1467811180893689229,
        8894449883909721930,
        4032919701550724070,
        3018335208148582611,
        4398674161411728737,
        7946364004577013996
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    User: obx_int.EntityDefinition<User>(
        model: _entities[0],
        toOneRelations: (User object) => [],
        toManyRelations: (User object) => {},
        getId: (User object) => object.id,
        setId: (User object, int id) {
          object.id = id;
        },
        objectToFB: (User object, fb.Builder fbb) {
          final genderOffset =
              object.gender == null ? null : fbb.writeString(object.gender!);
          final fullNameOffset = fbb.writeString(object.fullName);
          fbb.startTable(34);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, genderOffset);
          fbb.addOffset(2, fullNameOffset);
          fbb.addInt64(21, object.age);
          fbb.addBool(32, object.isSelected);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final genderParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final fullNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final ageParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 46, 0);
          final isSelectedParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 68, false);
          final object = User(
              id: idParam,
              gender: genderParam,
              fullName: fullNameParam,
              age: ageParam,
              isSelected: isSelectedParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [User] entity fields to define ObjectBox queries.
class User_ {
  /// See [User.id].
  static final id = obx.QueryIntegerProperty<User>(_entities[0].properties[0]);

  /// See [User.gender].
  static final gender =
      obx.QueryStringProperty<User>(_entities[0].properties[1]);

  /// See [User.fullName].
  static final fullName =
      obx.QueryStringProperty<User>(_entities[0].properties[2]);

  /// See [User.age].
  static final age = obx.QueryIntegerProperty<User>(_entities[0].properties[3]);

  /// See [User.isSelected].
  static final isSelected =
      obx.QueryBooleanProperty<User>(_entities[0].properties[4]);
}
